
// Create Virtual Environment 
pip3 install virtualenv
virtualenv --version
virtualenv env_name
source env_name/bin/activate

or

python3 -m virtualenv env_name

// Install Django and Create a project
python3 -m pip install Django==3.0.8
python3 -m django --version
django-admin startproject Project_Name

// Navigate to Project Folder
cd Project_Name/

python3 manage.py makemigrations
python3 manage.py migrate
python3 manage.py runserver

// create a application for project
python3 manage.py startapp app_name
python3 manage.py runserver

// create superuser as admin for managing the project database
python3 manage.py createsuperuser
To access the admin
http://localhost:8000/admin

//add lines in settings.py
TEMPLATE_DIR = os.path.join(BASE_DIR,'templates')
STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) // for image files
ALLOWED_HOSTS = ['*']
'app_name' in INSTALLED_APPS
'DIRS': [TEMPLATE_DIR,] in TEMPLATES

//add lines in urls.py
from django.urls import path,include
path('',include('app_name.urls')),

//create templates folder in Project_Name Main Folder - for HTML files
//create html files in templates folder
//create static folder in Project_Name Main Folder - for image files
//create image folder in static folder
//create image files in image folder inside the static folder
//create urls.py in app_name folder

//add lines in urls.py inside the app_name folder
from django.urls import path
from . import views
urlpatterns = [
    path('',views.index,name="index"),
    path('index',views.index,name="index")
]

//add functions in views.py file - named as in urls.py file inside the app_name folder
def index(request):
    return render(request,'index.html')

//create tables for database in models.py inside the app_name folder
import uuid
class table_name(models.Model):
    unique_id = models.UUIDField(primary_key=True, null=False , default=uuid.uuid4, editable=False)
    integer_field = models.IntegerField()
    char_field = models.CharField(max_length = 50, null=False)
    textarea_field = models.TextField()
    def __str__(self):
        return '{}'.format(self.integer_field)  

//Register the tables in admin.py inside the app_name folder
from .models import table_name
admin.site.register(table_name)

python3 manage.py makemigrations
python3 manage.py migrate
python3 manage.py runserver

pip3 freeze > requirements.txt  # Python3

pip3 install -r requirements.txt

// Delete full sqlite database
1) Delete the sqlite database file (often db.sqlite3) in your django project folder (or wherever you placed it)
2) Delete everything except __init__.py file from migration folder in all django apps (eg: rm */migrations/0*.py)
3) Make changes in your models (models.py).
4) Run the command python manage.py makemigrations or python3 manage.py makemigrations
5) Then run the command python manage.py migrate.

// For SSH Key Generation in MAC
ssh-keygen
cd ~/.ssh/
cat id_rsa.pub

// To host in pythonanywhere
https://www.pythonanywhere.com/
Follow this steps: https://youtu.be/Y4c4ickks2A

git clone 
mkvirtualenv --python=/usr/bin/python3.8 env_name
pip3 install django

In settings.py, ALLOWED_HOSTS = ['pythonanywhere.com']
comment -> STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
At last, STATIC_ROOT = '/home/Name/Project/static/'

python3 manage.py collectstatic

To find the disk storage in pythonanywhere
du -hs /tmp ~/.[!.]* ~/* | sort -h

// To host in vercel
https://vercel.com/
Follow this steps: https://jay-hale.medium.com/django-on-vercel-in-30-minutes-e69eed15b616
Need to connect database with online DB instead of default sqlite3

// For mongoDB connection
https://cloud.mongodb.com/
Follow this steps: https://jacobsood.medium.com/integrating-mongodb-atlas-with-django-using-djongo-962dfd1513eb

// To get custom domain names
https://domains.google.com/

// To host in heroku
https://www.heroku.com/
Follow this steps: https://codeburst.io/deploy-your-django-project-for-free-140d73a2c76b
https://www.linkedin.com/pulse/django-app-deployment-heroku-shivam-jha/
https://youtu.be/GMbVzl_aLxM

pip install django-heroku
pip install gunicorn

Add Procfile file -> web: gunicorn myproject.wsgi

heroku login
heroku create mydomainname
heroku git:remote -a mydomainname

heroku config:set DISABLE_COLLECTSTATIC=1
git push heroku main 

// For free hosting with custom domain and SSL certificate in heroku
Follow this steps: https://andreyazimov.medium.com/how-free-heroku-really-works-and-how-to-get-maximum-from-it-daa53f2b3c57
https://www.cloudflare.com/en-in/ssl/
https://youtu.be/cK5Z_r5-4CQ
https://youtu.be/Y4iHXhRkpO4
https://pushalert.co/blog/free-ssl-easy-setup-guide/

// To prevent heroku from sleeping
https://elements.heroku.com/addons/newrelic
For heroku domain : http://kaffeine.herokuapp.com/
